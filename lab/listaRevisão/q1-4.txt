1- Qual é a ordem de complexidade das seguintes funções (utilize a notação O).
a) f(n) = n^2 + 2
b) g(n) = 503
c) g(n) = 2 log n + n
d) g(n) = 10. 2 n
e) f(n) = n log n + log n

a) O(n^2)
b) O(1)
c) O(n)
d) O(2^n)
e) O(n log n)

2 - Qual das funções acima possui a maior ordem de complexidade?
d) O(2^n)

3 - Indique a função de complexidade e o custo assintótico em relação ao número de atribuições de
cada um dos desses algoritmos abaixo:

a)
x = 0
while (n > 0)
{
    x = x + x
    n = n/2
}


b)
x = 0
for i = 1 to n - 2
{ for j = 1 to n -1
x = x + x
}

c)
x = n * n;
x = x +n;
x = x + i;
